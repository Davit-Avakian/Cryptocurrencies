{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\react\\\\cryptocurrencies\\\\cryptocurrencies\\\\src\\\\components\\\\List\\\\List.js\";\nimport React from \"react\";\nimport { API_URL } from '../../configs';\nimport { query } from '../core/helpers/query';\nimport Loading from \"../common/Loading\";\nimport Pagination from \"./Pagination\";\nimport Table from \"./Table\";\nimport './Table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass List extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChangePagination = direction => {\n      const {\n        location,\n        history\n      } = this.props;\n      let {\n        page\n      } = query(location.search);\n      page = direction === 'next' ? +page + 1 : +page - 1;\n      history.push({\n        pathname: '/',\n        search: `?page=${page}`\n      });\n    };\n\n    this.sortCurrencies = (type, name) => {\n      const {\n        currencies,\n        highToLow\n      } = this.state;\n\n      if (!name) {\n        if (highToLow && !name) {\n          currencies.sort((a, b) => {\n            return a[type] - b[type];\n          });\n          this.setState({\n            highToLow: false\n          });\n        } else {\n          currencies.sort((a, b) => {\n            return b[type] - a[type];\n          });\n          this.setState({\n            highToLow: true\n          });\n        }\n      } else {\n        if (highToLow) {\n          currencies.sort((a, b) => {\n            return a[type].localeCompare(b[type]);\n          });\n          this.setState({\n            highToLow: false\n          });\n        } else {\n          currencies.sort((a, b) => {\n            return b[type].localeCompare(a[type]);\n          });\n          this.setState({\n            highToLow: true\n          });\n        }\n      }\n\n      const sortedCurrencies = [...currencies];\n      this.setState({\n        currencies: sortedCurrencies\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      currencies: [],\n      error: null,\n      totalPages: 5\n    };\n  }\n\n  componentDidMount() {\n    const {\n      history,\n      location\n    } = this.props;\n    const {\n      page\n    } = query(location.search);\n\n    if (!page) {\n      history.push({\n        pathname: '/',\n        search: `?page=1`\n      });\n    }\n\n    this.fetchCurrency(page || 1);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      page: prevPage\n    } = query(prevProps.location.search);\n    const {\n      page: nextPage\n    } = query(this.props.location.search);\n\n    if (prevPage !== nextPage) {\n      this.fetchCurrency(nextPage);\n    }\n  }\n\n  fetchCurrency(page) {\n    this.setState({\n      isLoading: true\n    });\n    fetch(`${API_URL}&page=${page || 1}&per_page=20`).then(data => {\n      if (data.status === 200) {\n        return data.json();\n      }\n\n      throw Error();\n    }).then(currencies => {\n      this.setState({\n        isLoading: false,\n        currencies\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false,\n        error\n      });\n    });\n  }\n\n  renderChangePercent(percent) {\n    if (percent > 0) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"percent-raised\",\n        children: [percent, \"% \\u2191\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 18\n      }, this);\n    } else if (percent < 0) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"percent-fallen\",\n        children: [percent, \"% \\u2193\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: percent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 18\n      }, this);\n    }\n  }\n\n  render() {\n    const {\n      isLoading,\n      currencies,\n      error,\n      totalPages\n    } = this.state;\n    const {\n      location\n    } = this.props;\n    const {\n      page\n    } = query(location.search);\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        currencies: currencies,\n        renderChangePercent: this.renderChangePercent,\n        sortCurrencies: this.sortCurrencies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        page: +page || 1,\n        totalPages: totalPages,\n        handleChangePagination: this.handleChangePagination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["C:/Users/David/Desktop/react/cryptocurrencies/cryptocurrencies/src/components/List/List.js"],"names":["React","API_URL","query","Loading","Pagination","Table","List","Component","constructor","handleChangePagination","direction","location","history","props","page","search","push","pathname","sortCurrencies","type","name","currencies","highToLow","state","sort","a","b","setState","localeCompare","sortedCurrencies","isLoading","error","totalPages","componentDidMount","fetchCurrency","componentDidUpdate","prevProps","prevPage","nextPage","fetch","then","data","status","json","Error","catch","renderChangePercent","percent","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { API_URL } from '../../configs'\r\nimport {query} from '../core/helpers/query'\r\nimport Loading from \"../common/Loading\";\r\nimport Pagination from \"./Pagination\";\r\nimport Table from \"./Table\";\r\nimport './Table.css'\r\nclass List extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoading: false,\r\n            currencies: [],\r\n            error: null,\r\n            totalPages:5,\r\n        }\r\n    };\r\n    componentDidMount() {\r\n        const {history, location} = this.props\r\n        const {page} = query(location.search);\r\n        if(!page){  \r\n            history.push({\r\n                pathname: '/',\r\n                search: `?page=1`,\r\n              })\r\n        }\r\n       this.fetchCurrency(page || 1)\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        const {page:prevPage} = query(prevProps.location.search)\r\n        const {page:nextPage} = query(this.props.location.search)\r\n        if(prevPage !== nextPage){\r\n            this.fetchCurrency(nextPage)\r\n        }\r\n    }\r\n    \r\n    fetchCurrency(page){\r\n        this.setState({ isLoading: true });\r\n        fetch(`${API_URL}&page=${page || 1}&per_page=20`)\r\n            .then(data => {\r\n                if (data.status === 200) {\r\n                    return data.json()\r\n                }\r\n                throw Error()\r\n            })\r\n            .then((currencies) => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    currencies,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    error\r\n                })\r\n            })\r\n    }\r\n    renderChangePercent(percent) {\r\n        if (percent > 0) {\r\n          return <span className=\"percent-raised\">{percent}% &uarr;</span>\r\n        } else if (percent < 0) {\r\n          return <span className=\"percent-fallen\">{percent}% &darr;</span>\r\n        } else {\r\n          return <span>{percent}</span>\r\n        }\r\n      }\r\n      handleChangePagination = (direction)=>{\r\n        const {location, history} = this.props\r\n        let {page} = query(location.search);\r\n        page = direction === 'next' ? +page + 1 : +page - 1\r\n        history.push({\r\n            pathname: '/',\r\n            search: `?page=${page}`,\r\n          })\r\n    }\r\n\r\n    sortCurrencies = (type, name) => {\r\n        const {currencies, highToLow} = this.state;\r\n\r\n        if(!name) {\r\n            if(highToLow && !name) {\r\n                currencies.sort((a ,b) => {\r\n                return a[type] - b[type];\r\n                })\r\n                this.setState({highToLow: false})\r\n            }else {\r\n                currencies.sort((a ,b) => {\r\n                    return b[type] - a[type];\r\n                })\r\n                this.setState({highToLow: true})\r\n            }\r\n        }else {\r\n            if(highToLow){\r\n            currencies.sort((a,b) => {\r\n                return a[type].localeCompare(b[type])\r\n            })\r\n            this.setState({highToLow: false})\r\n        }else{\r\n            currencies.sort((a,b) => {\r\n                return b[type].localeCompare(a[type])\r\n            })\r\n            this.setState({highToLow: true})\r\n        }\r\n        }\r\n    \r\n        const sortedCurrencies = [...currencies];\r\n\r\n        this.setState({currencies: sortedCurrencies});\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, currencies, error, totalPages } = this.state;\r\n        const {location} = this.props\r\n        const {page} = query(location.search);\r\n        if (error) {\r\n            return <div>Error</div>\r\n        }\r\n        if (isLoading) {\r\n            return <div className=\"loading-container\">\r\n                <Loading />\r\n            </div>\r\n        }\r\n        return (\r\n            <>\r\n            <Table currencies={currencies} renderChangePercent={this.renderChangePercent} sortCurrencies={this.sortCurrencies}/>\r\n            <Pagination\r\n            page={+page || 1}\r\n            totalPages={totalPages}\r\n            handleChangePagination={this.handleChangePagination}\r\n            />\r\n            </>\r\n            )\r\n    }\r\n}\r\nexport default List"]},"metadata":{},"sourceType":"module"}