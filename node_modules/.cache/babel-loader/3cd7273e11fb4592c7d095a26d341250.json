{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\react\\\\cryptocurrencies\\\\cryptocurrencies\\\\src\\\\components\\\\common\\\\PopUp.js\";\nimport React from 'react';\nimport './PopUp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PopUp extends React.Component {\n  constructor() {\n    super();\n\n    this.closePopUpWrapper = e => {\n      const {\n        closePopUp\n      } = this.props;\n      closePopUp(e, this.ref);\n    };\n\n    this.getInputValue = (e, type) => {\n      this.setState({\n        [type]: e.target.value\n      });\n    };\n\n    this.clearState = () => {\n      this.setState({\n        email: '',\n        password: ''\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.ref = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      document.addEventListener('click', this.closePopUpWrapper);\n    }, 200);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.closePopUpWrapper);\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    const {\n      createAccountSubmit,\n      createAccount,\n      submitSignIn,\n      error\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.ref,\n      className: \"PopUp\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: createAccount ? 'Create Account' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PopUp-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: email,\n          type: \"text\",\n          placeholder: \"email\",\n          onChange: e => this.getInputValue(e, 'email')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          type: \"text\",\n          placeholder: \"password\",\n          onChange: e => this.getInputValue(e, 'password')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: createAccount ? 'Email already exists' : 'Invalid Email or Password'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 34\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !(email && password),\n          onClick: () => {\n            if (createAccount) {\n              createAccountSubmit(this.state);\n            } else {\n              submitSignIn(this.state);\n            }\n\n            this.clearState();\n          },\n          children: createAccount ? 'Create' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PopUp;","map":{"version":3,"sources":["C:/Users/David/Desktop/react/cryptocurrencies/cryptocurrencies/src/components/common/PopUp.js"],"names":["React","PopUp","Component","constructor","closePopUpWrapper","e","closePopUp","props","ref","getInputValue","type","setState","target","value","clearState","email","password","state","createRef","componentDidMount","setTimeout","document","addEventListener","componentWillUnmount","removeEventListener","render","createAccountSubmit","createAccount","submitSignIn","error"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './PopUp.css'\r\n\r\nclass PopUp extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n        }\r\n\r\n        this.ref = React.createRef();\r\n    }\r\n\r\n    closePopUpWrapper = (e) => {\r\n        const {closePopUp} = this.props;\r\n\r\n        closePopUp(e, this.ref)\r\n    }\r\n\r\n    getInputValue = (e, type) => {\r\n        this.setState({[type]: e.target.value})\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            email: '',\r\n            password: '',\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            document.addEventListener('click', this.closePopUpWrapper)\r\n        },200)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.closePopUpWrapper)\r\n    }\r\n\r\n    render() {\r\n        const {email,password} = this.state;\r\n        const {createAccountSubmit, createAccount, submitSignIn, error} = this.props;\r\n\r\n        return (\r\n            \r\n            <div ref={this.ref} className='PopUp'>\r\n                    <h2>{createAccount ? 'Create Account' : 'Sign In'}</h2>\r\n                    <div className='PopUp-inputs'>\r\n                        <input value={email} type='text' placeholder='email' onChange={(e) => this.getInputValue(e,'email')}></input>\r\n                        <input value={password} type='text' placeholder='password' onChange={(e) => this.getInputValue(e,'password')}></input>\r\n                        {error ? <span className='error'>{createAccount ? 'Email already exists' : 'Invalid Email or Password'}</span> : null}\r\n                        <button disabled={!(email && password)} onClick={() => {\r\n                            if(createAccount) {\r\n                                createAccountSubmit(this.state);\r\n                            }else {\r\n                                submitSignIn(this.state);\r\n                            }\r\n                            this.clearState();\r\n                        }}>{createAccount ? 'Create' : 'Sign In'}</button>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PopUp;"]},"metadata":{},"sourceType":"module"}