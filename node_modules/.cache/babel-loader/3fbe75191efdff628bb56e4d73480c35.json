{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\react\\\\cryptocurrencies\\\\cryptocurrencies\\\\src\\\\components\\\\Details\\\\Details.js\",\n    _s = $RefreshSig$();\n\nimport { render } from '@testing-library/react';\nimport { func } from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getCurrencyURL } from '../../configs';\nimport './Details.css';\nimport PurchasePopUp from './PurchasePopUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Details = props => {\n  _s();\n\n  const [currency, setCurrency] = useState([]);\n  const [openPopUp, setOpenPopUp] = useState(false);\n  const [buy, setBuy] = useState(false);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchCurrency();\n  }, [id]);\n\n  const fetchCurrency = () => {\n    fetch(`${getCurrencyURL(id)}`).then(data => data.json()).then(response => {\n      setCurrency(response);\n    });\n  };\n\n  const openPurchasePopUp = buy => {\n    if (buy) {\n      setOpenPopUp(true);\n      setBuy(true);\n      return;\n    }\n\n    setOpenPopUp(true);\n    setBuy(false);\n  };\n\n  const closePurchasePopUp = () => {\n    setOpenPopUp(false);\n    setBuy(false);\n  };\n\n  const {\n    signedIn,\n    setPurchases\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"go-back\",\n      onClick: () => navigate(-1),\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), currency.map(_ref => {\n      let {\n        id,\n        name,\n        image,\n        current_price,\n        market_cap,\n        circulating_supply\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Detail-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          style: {\n            width: '100px',\n            height: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Price - \", current_price, \"$\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Market Cap - \", market_cap, \"$\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Circulating Supply - \", circulating_supply, \"$\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }, this), signedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Detail-Buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buy\",\n            onClick: () => openPurchasePopUp(true),\n            children: \"BUY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sell\",\n            onClick: () => openPurchasePopUp(false),\n            children: \"SELL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 44\n        }, this) : null, openPopUp ? /*#__PURE__*/_jsxDEV(PurchasePopUp, {\n          id: id,\n          buy: buy,\n          currencyName: name,\n          currencyPrice: current_price,\n          closePopUp: this.closePurchasePopUp,\n          setPurchases: setPurchases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 46\n        }, this) : null]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Details, \"nV2oBPihZJ78he3ucAPgibxXmM8=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["C:/Users/David/Desktop/react/cryptocurrencies/cryptocurrencies/src/components/Details/Details.js"],"names":["render","func","React","useEffect","useState","useNavigate","useParams","getCurrencyURL","PurchasePopUp","Details","props","currency","setCurrency","openPopUp","setOpenPopUp","buy","setBuy","id","navigate","fetchCurrency","fetch","then","data","json","response","openPurchasePopUp","closePurchasePopUp","signedIn","setPurchases","map","name","image","current_price","market_cap","circulating_supply","width","height"],"mappings":"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","sourcesContent":["import { render } from '@testing-library/react';\r\nimport { func } from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { getCurrencyURL } from '../../configs';\r\nimport './Details.css';\r\nimport PurchasePopUp from './PurchasePopUp';\r\n\r\nconst Details = (props) => {\r\n\r\n    const [currency, setCurrency] = useState([]);\r\n    const [openPopUp, setOpenPopUp] = useState(false);\r\n    const [buy, setBuy] = useState(false);\r\n    const {id} = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetchCurrency();\r\n    }, [id])\r\n\r\n\r\n    const fetchCurrency = () => {\r\n\r\n        fetch(`${getCurrencyURL(id)}`)\r\n            .then(data => data.json())\r\n            .then(response => {\r\n                setCurrency(response);\r\n            })\r\n    }\r\n\r\n    const openPurchasePopUp = (buy) => {\r\n        if(buy) {\r\n            setOpenPopUp(true);\r\n            setBuy(true);\r\n            return;\r\n        }\r\n        setOpenPopUp(true);\r\n        setBuy(false);\r\n    }\r\n\r\n    const closePurchasePopUp = () => {\r\n        setOpenPopUp(false);\r\n        setBuy(false);\r\n    }\r\n\r\n\r\n        const {signedIn, setPurchases} = props;\r\n\r\n        return (\r\n        <div className='Detail'>\r\n            <span className='go-back' onClick={() => navigate(-1)}>Go Back</span>\r\n            {\r\n                currency.map(({id, name, image, current_price, market_cap, circulating_supply}) => {\r\n                    return (\r\n                            <div className='Detail-info' key={id}>\r\n                                <img src={image} style={{width: '100px', height: '100px'}}></img>\r\n                                <h2>{name}</h2>\r\n                                <span>Price - {current_price}$</span>\r\n                                <span>Market Cap - {market_cap}$</span>\r\n                                <span>Circulating Supply - {circulating_supply}$</span>\r\n                                {\r\n                                signedIn ? <div className='Detail-Buttons'>\r\n                                    <button className='buy' onClick={() => openPurchasePopUp(true)}>BUY</button>\r\n                                    <button className='sell' onClick={() => openPurchasePopUp(false)}>SELL</button>\r\n                                </div> : null\r\n                                }\r\n                                {openPopUp ? <PurchasePopUp id={id} buy={buy} currencyName={name} currencyPrice={current_price} closePopUp={this.closePurchasePopUp} setPurchases={setPurchases}/> : null}\r\n                            </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details;"]},"metadata":{},"sourceType":"module"}